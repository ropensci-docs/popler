[{"path":"https://docs.ropensci.org/popler/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://docs.ropensci.org/popler/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to popler","title":"Contributing to popler","text":"outlines propose change popler. ### Fixing typos Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. YES: edit roxygen comment .R file R/. : edit .Rd file man/.","code":""},{"path":"https://docs.ropensci.org/popler/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Contributing to popler","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reprex.","code":""},{"path":"https://docs.ropensci.org/popler/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"Contributing to popler","text":"recommend create Git branch pull request (PR). Look Travis AppVeyor build status making changes. README contain badges continuous integration services used package. New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat. highly unlikely accept changes without associated tests, instances exception can made (code can hard test). user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"https://docs.ropensci.org/popler/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to popler","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://docs.ropensci.org/popler/articles/introduction-to-popler.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to popler","text":"popler R package currently development phase, downloaded directly GitHub page. , make sure install devtools R package. devtools installed machine, install load popler:","code":"# devtools::install_github(\"AldoCompagnoni/popler\", build_vignettes = TRUE) library(popler)"},{"path":"https://docs.ropensci.org/popler/articles/introduction-to-popler.html","id":"metadata-what-type-of-data-is-contained-in-the-popler-database","dir":"Articles","previous_headings":"","what":"Metadata: what type of data is contained in the popler database?","title":"Introduction to popler","text":"popler provides data hundreds research projects. metadata projects allow understanding population data provided project. popler R package provides three functions explore metadata.","code":""},{"path":"https://docs.ropensci.org/popler/articles/introduction-to-popler.html","id":"pplr_dictionary","dir":"Articles","previous_headings":"Metadata: what type of data is contained in the popler database?","what":"pplr_dictionary()","title":"Introduction to popler","text":"pplr_dictionary() shows: variables contained metadata project meaning . data variables contain. see metadata variables meaning: show data variable actually contains, specify one variable: Last, least, information provided pplr_dictionary can visualized html page containing hyperlinks. open html page, execute pplr_report_dictionary function.","code":"pplr_dictionary() ##             variable                                             description ## 1              title                                        title of project ## 2  proj_metadata_key                                       unique project id ## 3             lterid                                               lter name ## 4           datatype             type of abundance data (e.g. count,biomass) ## 5    structured_data are abundance observations grouped (e.g. based on age)? ## 6          studytype                    experimental or observational study? ## 7     duration_years                            duration of project in years ## 8          community                    does data set contain multiple taxa? ## 9          structure                           types of indidivual structure ## 10         treatment                                      types of treatment ## 11          lat_lter                                      lter site latitude ## 12          lng_lter                                     lter site longitude ## 13           species                    specific epithet of a taxonomic unit ## 14           kingdom                                                 kingdom ## 15            phylum                                                  phylum ## 16             class                                                   class ## 17             order                                                   order ## 18            family                                                  family ## 19             genus                                                   genus pplr_dictionary(lterid, duration_years) ## $`lterid (NA)` ##  [1] \"SBC\" \"SEV\" \"SGS\" \"VCR\" \"AND\" \"NWT\" \"BNZ\" \"CDR\" \"GCE\" \"ARC\" \"CAP\" \"FCE\" ## [13] \"HFR\" \"KBS\" \"CWT\" \"HBR\" \"MCM\" \"JRN\" \"CCE\" \"KNZ\" \"LUQ\" \"MCR\" \"NTL\" \"PAL\" ## [25] \"PIE\" ##  ## $`duration_years (NA)` ##     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.  ##  0.00000  9.00000 12.00000 15.87258 20.00000 86.00000 pplr_report_dictionary()"},{"path":"https://docs.ropensci.org/popler/articles/introduction-to-popler.html","id":"pplr_browse","dir":"Articles","previous_headings":"Metadata: what type of data is contained in the popler database?","what":"pplr_browse()","title":"Introduction to popler","text":"pplr_browse() accesses subsets popler metadata table directly. Calling function returns table contains metadata projects popler: metadata table can subset specifying logical expression. useful focus datasets interest. Moreover, akin pplr_report_dictionary(), browse can generate report open html page. , set report variable TRUE. Alternatively, can pass object created pplr_browse() pplr_report_metadata() create report.","code":"all_studies <- pplr_browse() poa_metadata  <- pplr_browse(genus == \"Poa\" & species == \"fendleriana\") ## Warning: `tbl_df()` was deprecated in dplyr 1.0.0. ## ℹ Please use `tibble::as_tibble()` instead. ## ℹ The deprecated feature was likely used in the popler package. ##   Please report the issue at <https://github.com/ropensci/popler/issues>. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated. ## Warning: The `.dots` argument of `group_by()` is deprecated as of dplyr 1.0.0. ## ℹ The deprecated feature was likely used in the dplyr package. ##   Please report the issue at <https://github.com/tidyverse/dplyr/issues>. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated. poa_metadata ## # A tibble: 4 × 20 ## # Groups:   title, proj_metadata_key, lterid, datatype, structured_data, ## #   studytype, duration_years, community, studystartyr, studyendyr, ## #   structured_type_1, structured_type_2, structured_type_3, structured_type_4, ## #   treatment_type_1, treatment_type_2, treatment_type_3, lat_lter, lng_lter ## #   [4] ##   title              proj_metadata_key lterid datatype structured_data studytype ## * <chr>                          <int> <chr>  <chr>    <chr>           <chr>     ## 1 Livestock Exclosu…                35 SEV    cover    no              exp       ## 2 Pinon Juniper Net…                36 SEV    cover    yes             obs       ## 3 Pinon-Juniper (Co…                53 SEV    cover    yes             obs       ## 4 Transect Plant Li…               681 JRN    cover    no              obs       ## # ℹ 14 more variables: duration_years <int>, community <chr>, ## #   studystartyr <chr>, studyendyr <chr>, structured_type_1 <chr>, ## #   structured_type_2 <chr>, structured_type_3 <chr>, structured_type_4 <chr>, ## #   treatment_type_1 <chr>, treatment_type_2 <chr>, treatment_type_3 <chr>, ## #   lat_lter <dbl>, lng_lter <dbl>, taxas <named list> pplr_browse(lterid == \"SEV\", report = TRUE)  SEV <- pplr_browse(lterid == \"SEV\")  pplr_report_metadata(SEV)"},{"path":"https://docs.ropensci.org/popler/articles/introduction-to-popler.html","id":"the-keyword-argument","dir":"Articles","previous_headings":"Metadata: what type of data is contained in the popler database? > pplr_browse()","what":"The keyword argument","title":"Introduction to popler","text":"pplr_browse() can also single projects based partial matching across metadata variables contain characters. Specify character string want search using keyword argument (note function ignores variables contain numeric values):","code":"pplr_browse(keyword = \"parasite\", report = TRUE)"},{"path":"https://docs.ropensci.org/popler/articles/introduction-to-popler.html","id":"download-data","dir":"Articles","previous_headings":"","what":"Download data","title":"Introduction to popler","text":"identified one datasets interest, download raw data using pplr_get_data(). can use function download data three ways: Providing pplr_get_data() object created pplr_browse(). Providing pplr_get_data() object created pplr_browse(), additional logical expression subset object class browse. Providing pplr_get_data() logical expression. logical expression typically indicate specific project(s) user interested downloading. examples three ways use pplr_get_data(): , emphasize two important characteristics pplr_get_data(). First, similarly pplr_browse(), function selects datasets based variables described pplr_dictionary(). Second, pplr_get_data() download entire datasets satisfy user-defined conditions. Hence, example, example genus == \"Poa\" & species == \"fendleriana\", function download three datasets include data Poa fendleriana, along many taxa happen co-occur Poa fendleriana datasets. case using slow internet connection, datasets may take time download. Therefore, popler provides two utility functions saving downloaded data locally efficiently. thin wrappers around saveRDS readRDS allow store large data sets highly compressed formats. .rds files also advantage rapid read write times R, making optimal saving data sets later usage. Note examples : specify file type specifying path.","code":"# option 1 poa_metadata    <- pplr_browse(genus == \"Poa\" & species == \"fendleriana\")  poa_data        <- pplr_get_data(poa_metadata)  # option 2 poa_data_11     <- pplr_get_data(poa_metadata, duration_years > 10)  # option 3 parasite_data   <- pplr_get_data(proj_metadata_key == 25) # save the large data set for later usage pplr_save(poa_data, file = \"some/file/path/Poa_Data\")  # when you're ready to use it again, pick up where you left off.  poa_data_reloaded <- pplr_load(file = \"some/file/path/Poa_Data\")  # These will be identical stopifnot(identical(poa_data, poa_data_reloaded))"},{"path":"https://docs.ropensci.org/popler/articles/introduction-to-popler.html","id":"carefully-vet-the-methods-of-downloaded-data-sets-","dir":"Articles","previous_headings":"Download data","what":"Carefully vet the methods of downloaded data sets.","title":"Introduction to popler","text":"urge user carefully read documentation project using research purposes. Data sets downloaded popler share data structure, project peculiarities. show metadata downloaded data sets, use pplr_report_metadata data object produced pplr_get_data(). read methods project, click ‘metadata link’ hyperlink provided html page.","code":"pplr_report_metadata(poa_data)"},{"path":"https://docs.ropensci.org/popler/articles/introduction-to-popler.html","id":"data-structure","dir":"Articles","previous_headings":"Download data","what":"Data structure","title":"Introduction to popler","text":"popler, datasets objects produced pplr_get_data() structure. structure documented formally vignette('popler-database-structure', package = 'popler'). , provide brief description spatial replicates taxonomic information stored database. Spatial replicates identified using variables match patterns spatial_replication_level_X spatial_replication_level_X_label. X number referring one maximum 5 nested levels spatial replication. X can vary 1 5, 1 referring largest spatial replication level - one within nested smaller spatial replicates. example, spatial_replication_level_1 can represent site, spatial_replication_level_2 represents plot. specific case, spatial_replication_level_1_label contain string ‘site’, spatial_replication_level_2_label contain string ‘plot’. Taxonomic units identified species codes sppcode variable, genus species variables. sppcode variable usually contains alphanumeric codes. genus species variables Latin binomial name. Occasionally, datasets contain higher taxonomic classifications (family, class, etc.).","code":""},{"path":"https://docs.ropensci.org/popler/articles/introduction-to-popler.html","id":"spatio-temporal-replication","dir":"Articles","previous_headings":"Download data","what":"Spatio-temporal replication","title":"Introduction to popler","text":"Users can explore level temporal replication nested level spatial replication using pplr_site_rep_plot() pplr_site_rep() functions. pplr_site_rep_plot() produces scatterplot shows sites (spatial_replication_level_1) sampled given year. pplr_site_rep() allows user subset datasets downloaded pplr_get_data() based frequency number yearly replicates contained specific level spatial replication. example, function allows identify replicates second level spatial replication (e.g. plots within sites) contain two samples per years (frequency), 10 years (number yearly replicates). pplr_site_rep() returns logical vector subset pplr_get_data() object. additional examples explore vet popler data, see vignette('vetting-popler', package = 'popler').","code":""},{"path":"https://docs.ropensci.org/popler/articles/introduction-to-popler.html","id":"extra-covariates","dir":"Articles","previous_headings":"","what":"Extra covariates","title":"Introduction to popler","text":"data sets provided USA LTER network contain variables accommodated schema popler. order loose original data, popler stores extra information character variable named covariates. popler package provides two ways format covariates data frame: cov_unpack argument pplr_get data(), pplr_cov_unpack() function popler. Setting cov_unpack argument TRUE returns data frame combines variables default query popler, covariates contained particular study downloaded popler: Using pplr_cov_unpack() function data frame downloaded using pplr_get_data() returns separate data frame covariates contained downloaded object.","code":"d_47_cov <- pplr_get_data(proj_metadata_key == 47, cov_unpack = TRUE) ##    |                                                                               |                                                                      |   0%   |                                                                               |==================                                                    |  25%   |                                                                               |===================================                                   |  50%   |                                                                               |====================================================                  |  75%   |                                                                               |======================================================================| 100% ## You have downloaded data from 1 project. ## The identification number of this project is: 47. ##  ## To learn more about study design, use metadata_url() ## To cite the study, use pplr_citation(). head(d_47_cov) ##   year month day spatial_replication_level_1 spatial_replication_level_2 ## 1 2010     6  18 site_sev_pdog_restoration_B                          NA ## 2 2010     6  18 site_sev_pdog_restoration_B                          NA ## 3 2010     6  18 site_sev_pdog_restoration_B                          NA ## 4 2010     6  18 site_sev_pdog_restoration_B                          NA ## 5 2010     6  18 site_sev_pdog_restoration_B                          NA ## 6 2010     6  18 site_sev_pdog_restoration_B                          NA ##   treatment_type_1 structure_type_1 structure_type_2 structure_type_3 ## 1                B              349                M                A ## 2                B              348                M                A ## 3                B              347                M                A ## 4                B              245                M                A ## 5                B              244                M                A ## 6                B               NA                M                A ##   abundance_observation structure_type_4                       authors ## 1                     1             1085 Ana Davidson, Stephanie Baker ## 2                     1             1580 Ana Davidson, Stephanie Baker ## 3                     1             1350 Ana Davidson, Stephanie Baker ## 4                     1             1130 Ana Davidson, Stephanie Baker ## 5                     1             1480 Ana Davidson, Stephanie Baker ## 6                     1             1140 Ana Davidson, Stephanie Baker ##                               authors_contact   genus   species   datatype ## 1 davidson@unm.edu, srbaker@sevilleta.unm.edu Cynomys gunnisoni individual ## 2 davidson@unm.edu, srbaker@sevilleta.unm.edu Cynomys gunnisoni individual ## 3 davidson@unm.edu, srbaker@sevilleta.unm.edu Cynomys gunnisoni individual ## 4 davidson@unm.edu, srbaker@sevilleta.unm.edu Cynomys gunnisoni individual ## 5 davidson@unm.edu, srbaker@sevilleta.unm.edu Cynomys gunnisoni individual ## 6 davidson@unm.edu, srbaker@sevilleta.unm.edu Cynomys gunnisoni individual ##   spatial_replication_level_1_label spatial_replication_level_2_label ## 1                              PLOT                      Capture_Site ## 2                              PLOT                      Capture_Site ## 3                              PLOT                      Capture_Site ## 4                              PLOT                      Capture_Site ## 5                              PLOT                      Capture_Site ## 6                              PLOT                      Capture_Site ##   proj_metadata_key X1_label X1_value X2_label X2_value X3_label X3_value ## 1                47   SEASON   SUMMER     YEAR     2010    RECAP  RELEASE ## 2                47   SEASON   SUMMER     YEAR     2010    RECAP  RELEASE ## 3                47   SEASON   SUMMER     YEAR     2010    RECAP  RELEASE ## 4                47   SEASON   SUMMER     YEAR     2010    RECAP  RELEASE ## 5                47   SEASON   SUMMER     YEAR     2010    RECAP  RELEASE ## 6                47   SEASON   SUMMER     YEAR     2010    RECAP  RELEASE ##   X4_label X4_value X5_label X5_value X6_label X6_value     X7_label ## 1 Comments       NA  PIT_TAG       NA TAG_2_RT    249.0 Capture_Site ## 2 Comments       NA  PIT_TAG       NA TAG_2_RT    248.0 Capture_Site ## 3 Comments       NA  PIT_TAG       NA TAG_2_RT    246.0 Capture_Site ## 4 Comments       NA  PIT_TAG       NA TAG_2_RT    346.0 Capture_Site ## 5 Comments       NA  PIT_TAG       NA TAG_2_RT       NA Capture_Site ## 6 Comments       NA  PIT_TAG       NA TAG_2_RT    224.0 Capture_Site ##      X7_value X8_label X8_value ## 1 Las Colinas     <NA>     <NA> ## 2 Las Colinas     <NA>     <NA> ## 3 Las Colinas     <NA>     <NA> ## 4 Las Colinas     <NA>     <NA> ## 5 Las Colinas     <NA>     <NA> ## 6 Las Colinas     <NA>     <NA> d_47 <- pplr_get_data(proj_metadata_key == 47) ##    |                                                                               |                                                                      |   0%   |                                                                               |==================                                                    |  25%   |                                                                               |===================================                                   |  50%   |                                                                               |====================================================                  |  75%   |                                                                               |======================================================================| 100% ## You have downloaded data from 1 project. ## The identification number of this project is: 47. ##  ## To learn more about study design, use metadata_url() ## To cite the study, use pplr_citation(). head(pplr_cov_unpack(d_47)) ##   X1_label X1_value X2_label X2_value X3_label X3_value X4_label X4_value ## 1   SEASON   SUMMER     YEAR     2010    RECAP  RELEASE Comments       NA ## 2   SEASON   SUMMER     YEAR     2010    RECAP  RELEASE Comments       NA ## 3   SEASON   SUMMER     YEAR     2010    RECAP  RELEASE Comments       NA ## 4   SEASON   SUMMER     YEAR     2010    RECAP  RELEASE Comments       NA ## 5   SEASON   SUMMER     YEAR     2010    RECAP  RELEASE Comments       NA ## 6   SEASON   SUMMER     YEAR     2010    RECAP  RELEASE Comments       NA ##   X5_label X5_value X6_label X6_value     X7_label    X7_value X8_label ## 1  PIT_TAG       NA TAG_2_RT    249.0 Capture_Site Las Colinas     <NA> ## 2  PIT_TAG       NA TAG_2_RT    248.0 Capture_Site Las Colinas     <NA> ## 3  PIT_TAG       NA TAG_2_RT    246.0 Capture_Site Las Colinas     <NA> ## 4  PIT_TAG       NA TAG_2_RT    346.0 Capture_Site Las Colinas     <NA> ## 5  PIT_TAG       NA TAG_2_RT       NA Capture_Site Las Colinas     <NA> ## 6  PIT_TAG       NA TAG_2_RT    224.0 Capture_Site Las Colinas     <NA> ##   X8_value ## 1     <NA> ## 2     <NA> ## 3     <NA> ## 4     <NA> ## 5     <NA> ## 6     <NA>"},{"path":"https://docs.ropensci.org/popler/articles/popler-database-structure.html","id":"popler-overview","dir":"Articles","previous_headings":"","what":"Popler Overview","title":"Popler Database","text":"Popler database population individual-level data gathered throughout Long Term Ecological Research (LTER) stations funded USA National Science Foundation. define population data datasets time series size density population taxonomic unit. size population can quantified count, biomass, cover class. measures always repeated temporally, often repeated spatially well. define individual-level data information attributes individuals, subset thereof, make population. example, common attributes individuals size, age, sex.","code":""},{"path":"https://docs.ropensci.org/popler/articles/popler-database-structure.html","id":"temporal-replication","dir":"Articles","previous_headings":"Popler Overview","what":"Temporal replication","title":"Popler Database","text":"temporal information within dataset stored using sampling dates , available, daily resolution. Since datasets temporal resolution, popler stores date information three separate columns; day, month, year. date time columns, NULL -99999 values indicate information available raw data. Note never perform temporal aggregations data prior storing Popler.","code":""},{"path":"https://docs.ropensci.org/popler/articles/popler-database-structure.html","id":"spatial-replication","dir":"Articles","previous_headings":"Popler Overview","what":"Spatial replication","title":"Popler Database","text":"popler subdivides spatial replicates based spatial nestedness, sampling designs spatially nested. example, study performed 5 sites, 3 transects site, 4 quadrats within transect, contains 3 levels nested spatial replication: Level 1: site level, Level 2: transect level Level 3: quadrat level referencing scheme allows us standardize align datasets collected variety different sampling designs across different data types. Metadata extent spatial sampling unit recorded available (.e. km2, m, cm3, etc.). Note, higher levels spatial replication indicate smaller areas sampling extent. Similarly temporal replication, never aggregate data levels spatial replication prior storing Popler.","code":""},{"path":"https://docs.ropensci.org/popler/articles/popler-database-structure.html","id":"spatial-replication-level-1","dir":"Articles","previous_headings":"Popler Overview > Spatial replication","what":"Spatial Replication Level 1","title":"Popler Database","text":"first level spatial replication also highest, coarsest, level nested spatial replication. call level 1 ‘site’. LTER stations contain permanent ‘sites’ reused across studies. Therefore, “site” labels allow querying data collected particular site regardless original study dataset derived . Whenever available source metadata, ‘sites’ associated latitude longitude coordinates also recorded available; -99999 values exist within fields studies record geographic location ‘site’ label.","code":""},{"path":"https://docs.ropensci.org/popler/articles/popler-database-structure.html","id":"the-popler-database-schema","dir":"Articles","previous_headings":"","what":"The Popler Database Schema","title":"Popler Database","text":"following image depicts relationship structure among 14 tables popler. discuss schema, table contents, give definitions. Three tables discussed, two related climate one table database migration information.","code":""},{"path":"https://docs.ropensci.org/popler/articles/popler-database-structure.html","id":"lter-table","dir":"Articles","previous_headings":"","what":"1. LTER Table","title":"Popler Database","text":"Data LTER research station.","code":""},{"path":"https://docs.ropensci.org/popler/articles/popler-database-structure.html","id":"study-site-table","dir":"Articles","previous_headings":"","what":"2. Study Site Table","title":"Popler Database","text":"table contains labels identify “sites” (spatial replication level 1) used across research projects. Different datasets can use “site” label data collected sampling location.","code":""},{"path":"https://docs.ropensci.org/popler/articles/popler-database-structure.html","id":"project-table","dir":"Articles","previous_headings":"","what":"3. Project Table","title":"Popler Database","text":"Metadata related separate dataset.","code":""},{"path":"https://docs.ropensci.org/popler/articles/popler-database-structure.html","id":"sites-within-project-table","dir":"Articles","previous_headings":"","what":"4. Sites Within Project Table","title":"Popler Database","text":"Site level information regarding starting ending year sampling, number observations, number taxonomic units. Note , uniquetaxaunits refers taxonomic units observed within site, within dataset.","code":""},{"path":"https://docs.ropensci.org/popler/articles/popler-database-structure.html","id":"taxonomic-table","dir":"Articles","previous_headings":"","what":"5. Taxonomic Table","title":"Popler Database","text":"Taxonomic information recorded within project. table, taxonomic information refers individual site (spatial replication level 1).","code":""},{"path":"https://docs.ropensci.org/popler/articles/popler-database-structure.html","id":"accepted-taxonomic-table","dir":"Articles","previous_headings":"","what":"6. Accepted Taxonomic Table","title":"Popler Database","text":"Table containing “accepted” taxonomic information: attempt associate taxonomic units raw data popler taxonomic units accepted literature. taxonomic information also refers individual sites (spatial replication level 1).","code":""},{"path":"https://docs.ropensci.org/popler/articles/popler-database-structure.html","id":"count-table","dir":"Articles","previous_headings":"","what":"7. Count Table","title":"Popler Database","text":"Population data abundance quantified number individuals. Null values filled .","code":""},{"path":"https://docs.ropensci.org/popler/articles/popler-database-structure.html","id":"biomass-table","dir":"Articles","previous_headings":"","what":"8. Biomass Table","title":"Popler Database","text":"Population data abundance quantified terms biomass.","code":""},{"path":"https://docs.ropensci.org/popler/articles/popler-database-structure.html","id":"density-table","dir":"Articles","previous_headings":"","what":"9. Density Table","title":"Popler Database","text":"Population data abundance quantified terms density.","code":""},{"path":"https://docs.ropensci.org/popler/articles/popler-database-structure.html","id":"percent-cover-table","dir":"Articles","previous_headings":"","what":"10. Percent Cover Table","title":"Popler Database","text":"Population data abundance quantified terms cover.","code":""},{"path":"https://docs.ropensci.org/popler/articles/popler-database-structure.html","id":"individual-table","dir":"Articles","previous_headings":"","what":"11. Individual Table","title":"Popler Database","text":"Individual-level data. structure_type columns refer attributes individuals (e.g. size, age, sex, etc.)","code":""},{"path":"https://docs.ropensci.org/popler/articles/vetting-popler.html","id":"introduction-identifying-groups-of-data-sets","dir":"Articles","previous_headings":"","what":"Introduction: identifying groups of data sets","title":"Vetting popler","text":"popler R package built foster scientific synthesis using LTER long-term population data. premise synthesis using data many research projects share characteristics scientific interest. identify projects sharing salient attributes, popler uses metadata information associated LTER project. particular, fairly easy select projects based one following features: Replication, temporal spatial. Taxonomic group(s). Study characteristics. Geographic location. Vetting database based criteria intuitive. However, popler also facilitates identifying data sets ways. provide several examples select LTER data based four types features described . Moreover, final section also show carry complicated types searches.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/popler/articles/vetting-popler.html","id":"temporal-replication","dir":"Articles","previous_headings":"Introduction: identifying groups of data sets > 1. Replication","what":"Temporal replication","title":"Vetting popler","text":"interested long-term data, likely want select projects based many years data collected . straightforward: Note LTER projects contemplate sampling yearly sub-yearly frequency. Thus, studies longer 10 years often guarantee longitudinal series 10 observations. Note duration_years variable calculated studyendyr - studystartyr. Thus, additional variable named samplefreq characterizes approximate sample frequency study. Note samplefreq default variable included pplr_dictionary pplr_browse() functions. can viewed specifying full_tbl = TRUE argument either functions. ###1. Spatial replication","code":"library(popler) pplr_browse(duration_years > 10) ## # A tibble: 163 × 20 ## # Groups:   title, proj_metadata_key, lterid, datatype, structured_data, ## #   studytype, duration_years, community, studystartyr, studyendyr, ## #   structured_type_1, structured_type_2, structured_type_3, structured_type_4, ## #   treatment_type_1, treatment_type_2, treatment_type_3, lat_lter, lng_lter ## #   [163] ##    title             proj_metadata_key lterid datatype structured_data studytype ##  * <chr>                         <int> <chr>  <chr>    <chr>           <chr>     ##  1 SBC LTER: Reef: …                 1 SBC    individ… no              obs       ##  2 SBC LTER: Reef: …                 2 SBC    count    no              obs       ##  3 SBC LTER: Reef: …                 3 SBC    count    yes             obs       ##  4 SBC LTER: Reef: …                 4 SBC    cover    no              obs       ##  5 SBC LTER: Time s…                12 SBC    density  no              obs       ##  6 SBC LTER: Santa …                13 SBC    count    no              obs       ##  7 SBC LTER: Santa …                14 SBC    cover    no              obs       ##  8 SBC LTER: Santa …                15 SBC    biomass  no              obs       ##  9 SBC LTER: Reef: …                17 SBC    biomass  no              obs       ## 10 Long-Term Core S…                21 SEV    count    yes             obs       ## # ℹ 153 more rows ## # ℹ 14 more variables: duration_years <int>, community <chr>, ## #   studystartyr <chr>, studyendyr <chr>, structured_type_1 <chr>, ## #   structured_type_2 <chr>, structured_type_3 <chr>, structured_type_4 <chr>, ## #   treatment_type_1 <chr>, treatment_type_2 <chr>, treatment_type_3 <chr>, ## #   lat_lter <dbl>, lng_lter <dbl>, taxas <named list> pplr_dictionary(samplefreq) ## $`samplefreq (NA)` ##  [1] \"year\"         \"yr\"           \"season:yr\"    \"biweekly\"     \"month\"        ##  [6] \"month:year\"   \"monthly\"      \"season:year\"  \"bimonthly\"    \"NaN\"          ## [11] \"biennial\"     \"quadrennial\"  \"irregular\"    \"quinquennial\" \"day\" pplr_browse(samplefreq == \"monthly\") ## # A tibble: 1 × 20 ## # Groups:   title, proj_metadata_key, lterid, datatype, structured_data, ## #   studytype, duration_years, community, studystartyr, studyendyr, ## #   structured_type_1, structured_type_2, structured_type_3, structured_type_4, ## #   treatment_type_1, treatment_type_2, treatment_type_3, lat_lter, lng_lter ## #   [1] ##   title              proj_metadata_key lterid datatype structured_data studytype ## * <chr>                          <int> <chr>  <chr>    <chr>           <chr>     ## 1 SBC LTER: Cross-s…                20 SBC    count    no              obs       ## # ℹ 14 more variables: duration_years <int>, community <chr>, ## #   studystartyr <chr>, studyendyr <chr>, structured_type_1 <chr>, ## #   structured_type_2 <chr>, structured_type_3 <chr>, structured_type_4 <chr>, ## #   treatment_type_1 <chr>, treatment_type_2 <chr>, treatment_type_3 <chr>, ## #   lat_lter <dbl>, lng_lter <dbl>, taxas <named list>"},{"path":"https://docs.ropensci.org/popler/articles/vetting-popler.html","id":"before-downloading-data","dir":"Articles","previous_headings":"Introduction: identifying groups of data sets > 1. Replication","what":"Before downloading data","title":"Vetting popler","text":"wish select data sets based spatial replication, need consider popler organizes data nested spatial levels. example, many plant studies data collected plot level, can nested within block, turn can nested within site. popler labels spatial levels using numbers. Spatial level 1 coarsest level replication contains spatial replicates. example , spatial level 1 site, spatial level 2 block, spatial level 3 plot. popler allows total 5 spatial levels. Given , can select studies based three criteria: total number spatial replicates. number replicates within specific spatial level. number nested spatial replicates. provide three examples one respective cases.","code":"pplr_browse(tot_spat_rep > 100) ## # A tibble: 158 × 20 ## # Groups:   title, proj_metadata_key, lterid, datatype, structured_data, ## #   studytype, duration_years, community, studystartyr, studyendyr, ## #   structured_type_1, structured_type_2, structured_type_3, structured_type_4, ## #   treatment_type_1, treatment_type_2, treatment_type_3, lat_lter, lng_lter ## #   [158] ##    title             proj_metadata_key lterid datatype structured_data studytype ##  * <chr>                         <int> <chr>  <chr>    <chr>           <chr>     ##  1 SBC LTER: Reef: …                 1 SBC    individ… no              obs       ##  2 SBC LTER: Reef: …                 2 SBC    count    no              obs       ##  3 SBC LTER: Reef: …                 3 SBC    count    yes             obs       ##  4 SBC LTER: Reef: …                 5 SBC    individ… no              exp       ##  5 SBC LTER: Reef: …                 6 SBC    count    yes             exp       ##  6 SBC LTER: Reef: …                 7 SBC    count    no              exp       ##  7 SBC LTER: Time s…                12 SBC    density  no              obs       ##  8 SBC LTER: Santa …                13 SBC    count    no              obs       ##  9 SBC LTER: Santa …                14 SBC    cover    no              obs       ## 10 SBC LTER: Santa …                15 SBC    biomass  no              obs       ## # ℹ 148 more rows ## # ℹ 14 more variables: duration_years <int>, community <chr>, ## #   studystartyr <chr>, studyendyr <chr>, structured_type_1 <chr>, ## #   structured_type_2 <chr>, structured_type_3 <chr>, structured_type_4 <chr>, ## #   treatment_type_1 <chr>, treatment_type_2 <chr>, treatment_type_3 <chr>, ## #   lat_lter <dbl>, lng_lter <dbl>, taxas <named list> pplr_browse(spatial_replication_level_5_number_of_unique_reps > 1) ## # A tibble: 4 × 20 ## # Groups:   title, proj_metadata_key, lterid, datatype, structured_data, ## #   studytype, duration_years, community, studystartyr, studyendyr, ## #   structured_type_1, structured_type_2, structured_type_3, structured_type_4, ## #   treatment_type_1, treatment_type_2, treatment_type_3, lat_lter, lng_lter ## #   [4] ##   title              proj_metadata_key lterid datatype structured_data studytype ## * <chr>                          <int> <chr>  <chr>    <chr>           <chr>     ## 1 Plant succession …               141 AND    cover    no              obs       ## 2 e093: Soil Hetero…               287 CDR    cover    no              exp       ## 3 Macroinfaunal cou…               862 PIE    count    no              exp       ## 4 Meiofaunal counts…               868 PIE    count    no              exp       ## # ℹ 14 more variables: duration_years <int>, community <chr>, ## #   studystartyr <chr>, studyendyr <chr>, structured_type_1 <chr>, ## #   structured_type_2 <chr>, structured_type_3 <chr>, structured_type_4 <chr>, ## #   treatment_type_1 <chr>, treatment_type_2 <chr>, treatment_type_3 <chr>, ## #   lat_lter <dbl>, lng_lter <dbl>, taxas <named list> pplr_browse(n_spat_levs == 3) ## # A tibble: 96 × 20 ## # Groups:   title, proj_metadata_key, lterid, datatype, structured_data, ## #   studytype, duration_years, community, studystartyr, studyendyr, ## #   structured_type_1, structured_type_2, structured_type_3, structured_type_4, ## #   treatment_type_1, treatment_type_2, treatment_type_3, lat_lter, lng_lter ## #   [96] ##    title             proj_metadata_key lterid datatype structured_data studytype ##  * <chr>                         <int> <chr>  <chr>    <chr>           <chr>     ##  1 SBC LTER: Santa …                13 SBC    count    no              obs       ##  2 SBC LTER: Santa …                15 SBC    biomass  no              obs       ##  3 SBC LTER: Santa …                16 SBC    count    no              obs       ##  4 Long-Term Core S…                21 SEV    count    yes             obs       ##  5 Rodent Parasite …                25 SEV    count    yes             obs       ##  6 Burn Exclosure R…                28 SEV    individ… no              exp       ##  7 Nitrogen Fertili…                29 SEV    cover    no              exp       ##  8 Pino Gate Prairi…                33 SEV    count    no              obs       ##  9 Warming-El Nino-…                34 SEV    cover    no              exp       ## 10 Livestock Exclos…                35 SEV    cover    no              exp       ## # ℹ 86 more rows ## # ℹ 14 more variables: duration_years <int>, community <chr>, ## #   studystartyr <chr>, studyendyr <chr>, structured_type_1 <chr>, ## #   structured_type_2 <chr>, structured_type_3 <chr>, structured_type_4 <chr>, ## #   treatment_type_1 <chr>, treatment_type_2 <chr>, treatment_type_3 <chr>, ## #   lat_lter <dbl>, lng_lter <dbl>, taxas <named list>"},{"path":"https://docs.ropensci.org/popler/articles/vetting-popler.html","id":"after-downloading-data","dir":"Articles","previous_headings":"Introduction: identifying groups of data sets > 1. Replication","what":"After downloading data","title":"Vetting popler","text":"Users can also explore spatial temporal replication data explicitly downloading pplr_get_data() two function: pplr_site_rep() pplr_site_rep_plot(). pplr_site_rep() provides two options exploring data meet temporal replication requirements given spatial resolution. user can choose filter data specifying minimum sampling frequency per year minimum number years sample frequency. function uses sampling dates calculate frequency, provides additional information contained samplefreq column main metadata table. Users can also visualize frequency sampling coarsest level spatial replication using pplr_site_rep_plot() function. generates ggplot denotes whether particular site sampled particular year. Note coarsest level spatial replication called site contained variable spatial_replication_level_1. ###2. Taxonomic group popler limited specific taxonomic groups, currently contains mostly data animals plants. select information based taxonomic groups, simply specify group category wish select. default settings popler provide seven taxonomic groups: kingdom, phylum, class, order, family, genus, species request. Column sppcode provides identifier, usually alphanumeric code, associated taxonomic entity original dataset. Note LTER studies provide full taxonomic information; hence, browsing studies taxonomic information provide partial results (example , insects studies identified). Note taxonomic information returned pplr_browse() housed data structure called list column. entry list column list contains data.frame eight columns. Users can access information using following syntax. ###3. Study characteristics Metadata information provides variables select studies based design. particular: studytype: indicates whether study observational experimental. Options obs exp observational experimental studies, respectively. treatment_type: type treatments, study experimental. community: indicates whether project provides data multiple species. Options yes . structured_data: indicates whether project provides information population structure. example, population can sub-divided age, size, developmental classes. Options yes . show use three fields.","code":"# download some data (note: this download is >100MB) SEV <- pplr_get_data(proj_metadata_key == 21)  # Create a summary table containing names of replication levels that contain 2 samples per year for 10 years.  SEV_long_studies <- pplr_site_rep(SEV,                                    freq = 2,                                    duration = 10,                                    return_logical = FALSE)  # you can also subset it directly using the function and specifying it to return a logical vector subset_vec <- pplr_site_rep(SEV,                             freq = 2,                             duration = 10,                             return_logical = TRUE) # store subset of data SEV_long_data <- SEV[subset_vec, ] library(ggplot2)  # return the plot object w/ return_plot = TRUE pplr_site_rep_plot(SEV_long_data, return_plot = TRUE) +   ggtitle(\"Long Term Data from Sevilleta LTER\")    # or return an invisible copy of the input data and keep piping library(dplyr) SEV_long_data %>%   pplr_site_rep_plot(return_plot = FALSE) %>%   pplr_report_metadata() pplr_dictionary(class) ## $`class (class)` ##  [1] \"Phaeophycea\"            \"Actinopterygii\"         \"Chondrichthyes\"         ##  [4] \"Osteichthes\"            \"Asteroidea\"             \"Gastropoda\"             ##  [7] \"Anthozoa\"               \"Cephalopoda\"            \"Malacostraca\"           ## [10] \"Phaeophyceae\"           \"Bivalvia\"               \"Holothuroidea\"          ## [13] \"Echinoidea\"             \"Ascidiacea\"             \"Demospongiae\"           ## [16] \"Polychaeta\"             \"Ophiuroidea\"            \"Ascidiacae\"             ## [19] \"Rhodophyceae\"           \"Hydrozoa\"               \"Gymnolaemata\"           ## [22] \"Liliopsida\"             \"Ascidacea\"              \"Chlorophyceae\"          ## [25] \"Bacillariophyta\"        \"Maxillopoda\"            \"Calcarea\"               ## [28] \"Ophiuroidea/Asteroidea\" \"Ophiuroidae\"            \"Floriophyccae\"          ## [31] \"Mammalia\"               \"Bacillariophyceae\"      \"Conoidasida\"            ## [34] \"Secernentea\"            \"Cestoda\"                \"Archiacanthocephala\"    ## [37] \"cestode\"                \"Adenophorea\"            \"Insecta\"                ## [40] \"Arachnida\"              \"Catenotaeniidae\"        \"Insect\"                 ## [43] \"Reptilia\"               \"Aves\"                   \"Collembola\"             ## [46] \"Clitellata\"             \"Hexapoda\"               \"Lecanoromycetes\"        ## [49] \"Turbellaria\"            \"Ostracoda\"              \"Branchiobdellida\"       ## [52] \"Branchiopoda\"           \"Hirudinea\"              \"Oligochaeta\"            ## [55] \"Pelecypoda\"             \"Entogatha\"              \"Annelida\"               ## [58] \"Crustacea\"              \"Nematoda\"               \"Hydracarina\"            ## [61] \"Phylum Nemertea\"        \"Phylum Nematoda\"        \"Phylum Cnidaria\" pplr_browse(class == \"Insecta\") ## # A tibble: 7 × 20 ## # Groups:   title, proj_metadata_key, lterid, datatype, structured_data, ## #   studytype, duration_years, community, studystartyr, studyendyr, ## #   structured_type_1, structured_type_2, structured_type_3, structured_type_4, ## #   treatment_type_1, treatment_type_2, treatment_type_3, lat_lter, lng_lter ## #   [7] ##   title              proj_metadata_key lterid datatype structured_data studytype ## * <chr>                          <int> <chr>  <chr>    <chr>           <chr>     ## 1 Rodent Parasite D…                25 SEV    count    yes             obs       ## 2 Effect of Habitat…                43 SEV    count    no              obs       ## 3 Small Mammal Excl…                60 SEV    count    no              exp       ## 4 SGS-LTER Long-Ter…                86 SGS    count    no              obs       ## 5 Aquatic insect sa…               133 AND    count    no              obs       ## 6 Bonanza Creek Exp…               156 BNZ    count    no              obs       ## 7 North Temperate L…               822 NTL    count    no              obs       ## # ℹ 14 more variables: duration_years <int>, community <chr>, ## #   studystartyr <chr>, studyendyr <chr>, structured_type_1 <chr>, ## #   structured_type_2 <chr>, structured_type_3 <chr>, structured_type_4 <chr>, ## #   treatment_type_1 <chr>, treatment_type_2 <chr>, treatment_type_3 <chr>, ## #   lat_lter <dbl>, lng_lter <dbl>, taxas <named list> insects <- pplr_browse(class == 'Insecta')  # access the taxonomic table from the first project in the insects object insects$taxas[[1]] ## # A tibble: 7 × 8 ##   sppcode species     kingdom  phylum     class   order        family    genus   ##   <chr>   <chr>       <chr>    <chr>      <chr>   <chr>        <chr>     <chr>   ## 1 cune    neomexicana Animalia Arthropoda Insecta Diptera      Oestridae Cutere… ## 2 cune    neomexicana Animalia Arthropoda Insecta Diptera      Oestridae Cutere… ## 3 cuau    austeni     Animalia Arthropoda Insecta Diptera      Oestridae Cutere… ## 4 flea    sp          Animalia Arthropoda Insecta Siphonaptera NA        NA      ## 5 cuau    austeni     Animalia Arthropoda Insecta Diptera      Oestridae Cutere… ## 6 flea    sp          Animalia Arthropoda Insecta Siphonaptera NA        NA      ## 7 cusp    species     Animalia Arthropoda Insecta Diptera      Oestridae Cutere… # second table (etc.) insects$taxas[[2]] ## # A tibble: 205 × 8 ##    sppcode  species   kingdom  phylum     class   order       family       genus ##    <chr>    <chr>     <chr>    <chr>      <chr>   <chr>       <chr>        <chr> ##  1 ANPERPUL NA        Animalia Arthropoda Insecta Hymenoptera NA           NA    ##  2 APHABMOR morrisoni Animalia Arthropoda Insecta Hymenoptera APIDAE       Habr… ##  3 HAAGAANG angelicus Animalia Arthropoda Insecta Hymenoptera HALICTIDAE   Agap… ##  4 APDIAENA NA        Animalia Arthropoda Insecta Hymenoptera NA           NA    ##  5 MEOSMTIT titusi    Animalia Arthropoda Insecta Hymenoptera MEGACHILIDAE Osmia ##  6 ANPER005 5         Animalia Arthropoda Insecta Hymenoptera ANDRENIDAE   Perd… ##  7 HALASCOA NA        Animalia Arthropoda Insecta Hymenoptera NA           NA    ##  8 APTETALB NA        Animalia Arthropoda Insecta Hymenoptera NA           NA    ##  9 APANTPHE NA        Animalia Arthropoda Insecta Hymenoptera NA           NA    ## 10 HASPH002 2         Animalia Arthropoda Insecta Hymenoptera HALICTIDAE   Sphe… ## # ℹ 195 more rows pplr_dictionary(community) ## $`community (NA)` ## [1] \"no\"  \"yes\" pplr_browse(community == \"no\") # 20 single-species studies ## # A tibble: 43 × 20 ## # Groups:   title, proj_metadata_key, lterid, datatype, structured_data, ## #   studytype, duration_years, community, studystartyr, studyendyr, ## #   structured_type_1, structured_type_2, structured_type_3, structured_type_4, ## #   treatment_type_1, treatment_type_2, treatment_type_3, lat_lter, lng_lter ## #   [43] ##    title             proj_metadata_key lterid datatype structured_data studytype ##  * <chr>                         <int> <chr>  <chr>    <chr>           <chr>     ##  1 SBC LTER: Reef: …                 1 SBC    individ… no              obs       ##  2 SBC LTER: Reef: …                 5 SBC    individ… no              exp       ##  3 SBC LTER: Santa …                16 SBC    count    no              obs       ##  4 SBC LTER: Reef: …                17 SBC    biomass  no              obs       ##  5 SBC LTER: Reef: …                18 SBC    count    yes             obs       ##  6 Population Ecolo…                44 SEV    individ… no              obs       ##  7 Gunnison's Prair…                47 SEV    individ… no              exp       ##  8 SGS-LTER Long-Te…                84 SGS    individ… no              obs       ##  9 Density of Seagr…                90 VCR    density  no              exp       ## 10 Spruce Seedling …               158 BNZ    individ… no              exp       ## # ℹ 33 more rows ## # ℹ 14 more variables: duration_years <int>, community <chr>, ## #   studystartyr <chr>, studyendyr <chr>, structured_type_1 <chr>, ## #   structured_type_2 <chr>, structured_type_3 <chr>, structured_type_4 <chr>, ## #   treatment_type_1 <chr>, treatment_type_2 <chr>, treatment_type_3 <chr>, ## #   lat_lter <dbl>, lng_lter <dbl>, taxas <named list> pplr_dictionary(treatment) ## $`treatment (type of treatment)` ##  [1] \"observational\"                    \"removal\"                          ##  [3] \"fire\"                             \"resource\"                         ##  [5] \"temp(T); precip(P); resources(N)\" \"consumer\"                         ##  [7] \"precip\"                           \"precipitation\"                    ##  [9] \"density\"                          \"disturbance\"                      ## [11] \"exclosure\"                        \"temperature\"                      ## [13] \"competition\"                      \"diversity\"                        ## [15] \"restoration\" nrow( pplr_browse(treatment == \"fire\") ) # 21 fire studies ## [1] 18 pplr_dictionary(studytype) ## $`studytype (NA)` ## [1] \"obs\" \"exp\" nrow( pplr_browse(studytype == \"obs\") ) # 78 observational studies ## [1] 183"},{"path":"https://docs.ropensci.org/popler/articles/vetting-popler.html","id":"geographic-location-","dir":"Articles","previous_headings":"Introduction: identifying groups of data sets","what":"4. Geographic location.","title":"Vetting popler","text":"select studies based latitude longitude LTER headquarters around datasets , collected, simply use lat_lter lng_lter numeric variables:","code":"pplr_dictionary( lat_lter, lng_lter ) ## $`lat_lter (NA)` ##      Min.   1st Qu.    Median      Mean   3rd Qu.      Max.  ## -77.00000  33.43000  39.09000  35.65512  45.40000  66.63000  ##  ## $`lng_lter (NA)` ##      Min.   1st Qu.    Median      Mean   3rd Qu.      Max.  ## -149.8300 -119.8400 -106.7400 -103.4849  -93.2000  162.5200 pplr_browse( lat_lter > 40 & lng_lter < -100 ) # single-species studies ## # A tibble: 58 × 20 ## # Groups:   title, proj_metadata_key, lterid, datatype, structured_data, ## #   studytype, duration_years, community, studystartyr, studyendyr, ## #   structured_type_1, structured_type_2, structured_type_3, structured_type_4, ## #   treatment_type_1, treatment_type_2, treatment_type_3, lat_lter, lng_lter ## #   [58] ##    title             proj_metadata_key lterid datatype structured_data studytype ##  * <chr>                         <int> <chr>  <chr>    <chr>           <chr>     ##  1 SGS-LTER Long-Te…                63 SGS    cover    no              obs       ##  2 SGS-LTER Standar…                65 SGS    biomass  no              obs       ##  3 Open Top Chamber…                66 SGS    cover    no              exp       ##  4 SGS-LTER Boutelo…                69 SGS    count    no              exp       ##  5 SGS-LTER Boutelo…                70 SGS    cover    no              exp       ##  6 SGS-LTER Disturb…                71 SGS    cover    no              exp       ##  7 SGS-LTER Ecosyst…                72 SGS    count    no              exp       ##  8 SGS-LTER Ecosyst…                73 SGS    basal_c… no              exp       ##  9 SGS-LTER Effects…                74 SGS    cover    no              exp       ## 10 SGS-LTER Effects…                76 SGS    count    no              exp       ## # ℹ 48 more rows ## # ℹ 14 more variables: duration_years <int>, community <chr>, ## #   studystartyr <chr>, studyendyr <chr>, structured_type_1 <chr>, ## #   structured_type_2 <chr>, structured_type_3 <chr>, structured_type_4 <chr>, ## #   treatment_type_1 <chr>, treatment_type_2 <chr>, treatment_type_3 <chr>, ## #   lat_lter <dbl>, lng_lter <dbl>, taxas <named list>"},{"path":"https://docs.ropensci.org/popler/articles/vetting-popler.html","id":"more-complicated-searches","dir":"Articles","previous_headings":"Introduction: identifying groups of data sets","what":"5. More complicated searches","title":"Vetting popler","text":"Popler allows carrying complicated searches allowing ) simultaneously search several types metadata variables, ii) search studies matching string pattern. first case, simply provide function pplr_browse() logical statement regarding one metadata variable. example, want studies plants least 4 nested spatial levels, 10 years data: second case, keyword argument function pplr_browse() search string patterns within metadata study. example, case interested studies using traps: Note keyword argument works regular expressions well:","code":"pplr_browse(kingdom == \"Plantae\" & n_spat_levs == 4 & duration_years > 10) pplr_browse(keyword = 'trap') # look for studies that include the words \"trap\" or \"spatial\" pplr_browse(keyword = 'trap|spatial')"},{"path":"https://docs.ropensci.org/popler/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Compagnoni Aldo. Maintainer, author. Bibian Andrew. Author. Ochocki Brad. Author. Levin Sam. Author. Miller Tom. Author. Benjamin Bond-Lamberty. Reviewer.            Ben reviewed package ropensci, see <https://github.com/ropensci/software-review/issues/254> Corinna Gries. Reviewer.            Corinna reviewed package ropensci, see <https://github.com/ropensci/software-review/issues/254>","code":""},{"path":"https://docs.ropensci.org/popler/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Aldo C, Andrew B, Brad O, Sam L, Tom M (2023). popler: Popler R Package. https://github.com/ropensci/popler, https://docs.ropensci.org/popler/.","code":"@Manual{,   title = {popler: Popler R Package},   author = {Compagnoni Aldo and Bibian Andrew and Ochocki Brad and Levin Sam and Miller Tom},   year = {2023},   note = {https://github.com/ropensci/popler, https://docs.ropensci.org/popler/}, }"},{"path":"https://docs.ropensci.org/popler/index.html","id":"popler","dir":"","previous_headings":"","what":"Popler R Package","title":"Popler R Package","text":"popler R package browse query popler data base. popler PostgreSQL data base contains population-level datasets US long term ecological research (LTER) network. package currently available GitHub, ultimate goal submit CRAN. detailed explanation structure popler online database contained dratf manuscript presenting popler dedicated vignette. popler database organized around four types tables: . tables containing information population abundance. Population abundance can five types: count, biomass, cover, density, individual-level. B. table containg link abundance value taxonomic units refers . popler, “taxonomic unit” generally refers species. C. location “site”. “site” refers largest spatial replicate available dataset. Many datasets provide abundance data one site. D. Metadata information referring separate dataset.","code":""},{"path":"https://docs.ropensci.org/popler/index.html","id":"popler-rationale","dir":"","previous_headings":"","what":"Popler rationale","title":"Popler R Package","text":"package popler aims facilitate finding, retrieving, using time-series data population abundance associated US LTER network. find datasets, functions popler aid understanding browsing metadata information referring dataset. retrieve data, function pplr_get_data() downloads single datasets groups datasets. downloads share data structure. use downloaded data, package provides ancillary functions consult cite original data sources, examine temporal replication data set, methods couple dplyr verbs assist data manipulation.","code":""},{"path":"https://docs.ropensci.org/popler/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Popler R Package","text":"exported functions popler R package use pplr_ prefix. Moreover, functions use lazy /tidy evaluation, meaning need manually quote inputs.","code":"# Install stable version once on CRAN (hopefully soon!) install.packages('popler')   # Install development version now if(!require(devtools, quietly = TRUE)) {   install.packages(devtools) }  devtools::install_github('ropensci/popler')"},{"path":[]},{"path":"https://docs.ropensci.org/popler/index.html","id":"dictionary-of-variables","dir":"","previous_headings":"","what":"Dictionary of variables","title":"Popler R Package","text":"suggest start exploring metadata variables describing dataset popler using pplr_dictionary(). function works two ways: provides general description metadata variable. happens function called without arguments; example, calling pplr_dictionary(). provides possible values unquoted arguments. example, calling pplr_dictionary( proj_metadata_key ). output pplr_dictionary() data frame showing description metadata variable. However, function powerful used argument. pplr_dictionary() provided name metadata variable, returns possible unique values variable. example, providing datatype shows popler contains five types abundance data: Additionally, pplr_report_dictionary() function generates Rmd file renders html. html contains meaning variables, unique values.","code":"library(popler) pplr_dictionary() ##             variable ## 1              title ## 2  proj_metadata_key ## 3             lterid ## 4           datatype ## 5    structured_data ## 6          studytype ## 7     duration_years ## 8          community ## 9          structure ## 10         treatment ## 11          lat_lter ## 12          lng_lter ## 13           species ## 14           kingdom ## 15            phylum ## 16             class ## 17             order ## 18            family ## 19             genus ##                                                description ## 1                                         title of project ## 2                                        unique project id ## 3                                                lter name ## 4              type of abundance data (e.g. count,biomass) ## 5  are abundance observations grouped (e.g. based on age)? ## 6                     experimental or observational study? ## 7                             duration of project in years ## 8                     does data set contain multiple taxa? ## 9                            types of indidivual structure ## 10                                      types of treatment ## 11                                      lter site latitude ## 12                                     lter site longitude ## 13                    specific epithet of a taxonomic unit ## 14                                                 kingdom ## 15                                                  phylum ## 16                                                   class ## 17                                                   order ## 18                                                  family ## 19                                                   genus pplr_dictionary( datatype ) ## $`datatype (NA)` ## [1] \"individual\"  \"count\"       \"cover\"       \"biomass\"     \"density\"     ## [6] \"basal_cover\""},{"path":"https://docs.ropensci.org/popler/index.html","id":"browsing-popler","dir":"","previous_headings":"","what":"Browsing popler","title":"Popler R Package","text":"familiar meaning content popler’s metadata variables, pplr_browse() provides metadata studies contained popler. pplr_browse() also works without input. Without input, function produces data frame including metadata variables describing every study currently contained popler database. Note data frame tbl inherits browse class. Inputs pplr_browse() allow users subset data frame (e.g. duration_years > 5). subsetting, unique values provided pplr_dictionary() particularly useful. nuanced subsetting available datasets, keyword argument allows subset variables using partial matching. Note keyword act primarily information contained title studies. default settings pplr_browse() pplr_dictionary() report subset metadata variables contained popler. report variables, set full_tbl = TRUE.","code":"all_studies <- pplr_browse()  # do not quote logical expressions long_studies <- pplr_browse(duration_years > 20)   # keyword is quoted parasite_studies <- pplr_browse(keyword = 'parasite') #  vars are quoted interesting_studies <- pplr_browse(vars = c('duration_years', 'lterid'))   # Use full_tbl = TRUE to get a table with all possible variables all_studies_and_vars <- pplr_browse(full_tbl = TRUE)"},{"path":"https://docs.ropensci.org/popler/index.html","id":"reporting-metadata","dir":"","previous_headings":"","what":"Reporting metadata","title":"Popler R Package","text":"can generate human-readable report metadata variables projects subset using pplr_browse providing function argument report = TRUE . argument uses rmarkdown render metadata html file, opens default browser. Alternatively, can perform action described providing browse object produced calling pplr_browse function pplr_report_metadata().","code":"# generate metadata report for all studies pplr_browse(report=TRUE) # alternatively all_studies <- pplr_browse() pplr_report_metadata(all_studies)  # generate metadata report for parasite studies pplr_browse(keyword = 'parasite', report = TRUE) parasite_studies <- pplr_browse(keyword = 'parasite')  # alternatively pplr_report_metadata(parasite_studies)"},{"path":"https://docs.ropensci.org/popler/index.html","id":"retrieving-data","dir":"","previous_headings":"","what":"Retrieving data","title":"Popler R Package","text":"explored metadata decided projects interest , ’s time actually download data! pplr_get_data() connects data base via API, downloads raw data based criteria supplied. Alternatively, ’re happy projects represented browse object created earlier, can simply pass object pplr_get_data(). Note browse object contains 5 rows, pplr_get_data() download 5 separate datasets. objects created pplr_get_data() inherit get_data data.frame classes.","code":"# create a browse object and use it to get data  penguins <- pplr_browse(lterid == 'PAL')  # unpack covariates as well  penguin_raw_data <- pplr_get_data(penguins, cov_unpack = TRUE)  # A very specific query  more_raw_data <- pplr_get_data((proj_metadata_key == 43 |                                  proj_metadata_key == 25) &                                  year < 1995 )"},{"path":"https://docs.ropensci.org/popler/index.html","id":"using-data","dir":"","previous_headings":"","what":"Using data","title":"Popler R Package","text":"provide three ancillary functions facilitate use objects downloaded pplr_get_data(). First, pplr_metadata_url() opens webpage containing study details. scientific analyses, urge users review peculiarities dataset vetting online documentation. Importantly, pplr_metadata_url() also works objects produced pplr_browse. Second, pplr_cov_unpack() transforms data contained covariates column downloaded dataset separate columns. can useful depending objectives user. Note: can also transform covariates data frame directly pplr_get_data() providing function argument cov_unpack = TRUE. Third, pplr_citation() produces citation downloaded dataset.","code":""},{"path":"https://docs.ropensci.org/popler/index.html","id":"spatio-temporal-replication","dir":"","previous_headings":"","what":"Spatio-temporal replication","title":"Popler R Package","text":"datasets contained popler present many heterogeneities, especially terms spatio-temporal replication. studies present least spatial replicates sampled every year. Note datasets popler present least one additional replication level. spatial replicates denoted numbered variables form spatial_replication_level_X, X refers replication level can go 1 5. names replication levels (e.g. plot, subplot, etc.) contained variable spatial_replication_level_x_label. download dataset, can examine temporal replication largest spatial replicate (site, spatial_replication_level_1) using function pplr_site_rep_plot(). function produces plot showing whether given site sampled year.  Additionally, pplr_site_rep() produces either logical vector subsetting existing get_data object summary table temporal replication given spatial resolution. can control minimum frequency sampling minimum duration sampling using freq duration arguments, respectively. Additionally, can choose level spatial replication filter providing integer 1 5 rep_level argument. return_logical allows control returned function. TRUE returns logical vector corresponding rows get_data correspond spatial replicates meet criteria replication specified function. FALSE returns summary table describing number samples per year selected spatial resolution.","code":"# download and plot yearly spatial replication for dataset 1 kelp_df      <- pplr_get_data( proj_metadata_key == 1) pplr_site_rep_plot( kelp_df ) # Example with piping and subsetting w/ the logical vector output  library(dplyr)  SEV_studies <- pplr_get_data( lterid == 'SEV' datatype == 'invidual' )  long_SEV_studies <- SEV_studies %>%   .[pplr_site_rep(input = .,                   duration = 12,                   rep_level = 3), ] %>%   pplr_site_rep_plot()  # Or, create the summary table  SEV_summary <- SEV_studies %>%    pplr_site_rep(duration = 13,                 rep_level = 1,                 return_logical = FALSE)   # Modify the site_rep_plot() by hand using ggplot2 syntax library(ggplot2)  pplr_site_rep_plot(long_SEV_studies, return_plot = TRUE) +   ggtitle('Sevilleta LTER Temporal Replication')"},{"path":"https://docs.ropensci.org/popler/index.html","id":"data-manipulation","dir":"","previous_headings":"","what":"Data manipulation","title":"Popler R Package","text":"popler supplies methods couple dplyr verbs assist data manipulation. filter mutate methods available objects browse get_data classes. dplyr verbs change structure object much classes retain meaning included package, one can still use purposes.","code":"penguins_98 <- filter(penguin_raw_data, year == 1998)  class(penguins_98) # classes are not stripped from objects  penguins_98_true <- mutate(penguins_98, penguins_are = 'Awesome')  class(penguins_98_true)"},{"path":"https://docs.ropensci.org/popler/index.html","id":"further-information","dir":"","previous_headings":"","what":"Further information","title":"Popler R Package","text":"Additional information popler contained manuscript, vignettes associated R package. manuscript, currently draft form, presents popler database, R package, recommendations use . R package contains three vignettes: one vignette illustrates structure popler database, two vignettes provide introduction detailed look intended workflow popler package. case vignettes cover particular use case, still questions, discover bug, please don’t hesitate create issue.","code":""},{"path":"https://docs.ropensci.org/popler/reference/filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for dplyr verbs — filter.browse","title":"Methods for dplyr verbs — filter.browse","text":"Subsets browse get_data object based logical statements.","code":""},{"path":"https://docs.ropensci.org/popler/reference/filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for dplyr verbs — filter.browse","text":"","code":"# S3 method for browse filter(.data, ...)  # S3 method for get_data filter(.data, ...)"},{"path":"https://docs.ropensci.org/popler/reference/filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for dplyr verbs — filter.browse","text":".data browse get_data object ... logical conditions","code":""},{"path":"https://docs.ropensci.org/popler/reference/mutate.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for dplyr verbs — mutate.browse","title":"Methods for dplyr verbs — mutate.browse","text":"Add new columns browse get_data object.","code":""},{"path":"https://docs.ropensci.org/popler/reference/mutate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for dplyr verbs — mutate.browse","text":"","code":"# S3 method for browse mutate(.data, ...)  # S3 method for get_data mutate(.data, ...)"},{"path":"https://docs.ropensci.org/popler/reference/mutate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for dplyr verbs — mutate.browse","text":".data browse get_data object ... Name-value pairs expressions. Use NULL drop  variable.","code":""},{"path":"https://docs.ropensci.org/popler/reference/popler.html","id":null,"dir":"Reference","previous_headings":"","what":"popler package — popler","title":"popler package — popler","text":"popler package interacting PostgreSQL data base name. popler contains data long-term population  dynamics LTER network. Every exported function prefixed  pplr_ verb (e.g. pplr_get_data() noun (e.g.  pplr_citation. Accessing popler require API key,  need internet connection ready go!","code":""},{"path":"https://docs.ropensci.org/popler/reference/popler.html","id":"authors","dir":"Reference","previous_headings":"","what":"Authors","title":"popler package — popler","text":"Aldo Compagnoni aldo.compagnoni@aggiemail.usu.edu Andrew Bibian ajbibian@rice.edu Brad Ochocki brad.ochocki@rice.edu Sam Levin sam.levin@idiv.de Tom Miller tom.miller@rice.edu","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_browse.html","id":null,"dir":"Reference","previous_headings":"","what":"Browse the metadata of projects contained in the popler database — pplr_browse","title":"Browse the metadata of projects contained in the popler database — pplr_browse","text":"pplr_browse() reports metadata LTER studies contained popler database.  user can subset datasets, metadata variables visualize.","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_browse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Browse the metadata of projects contained in the popler database — pplr_browse","text":"","code":"pplr_browse(..., full_tbl = FALSE, vars = NULL, view = FALSE,   keyword = NULL, report = FALSE)"},{"path":"https://docs.ropensci.org/popler/reference/pplr_browse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Browse the metadata of projects contained in the popler database — pplr_browse","text":"... logical expression subset table containing metadata  datasets contained popler full_tbl logical; function returns standard  columns, full main table? Default FALSE. vars vector characters case user want select  variables popler's main table selected? view TRUE, opens spreadsheet-style data viewer. keyword string used select individual datasets based pattern matching. string matched every string element  variables metadata table popler. report logical; TRUE, function produces markdown  report study's metadata, opens html page.  Default FALSE.","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_browse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Browse the metadata of projects contained in the popler database — pplr_browse","text":"data frame combining metadata project  taxonomic units associated project. data frame class popler, data.frame, tbl_df, tbl.","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_browse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Browse the metadata of projects contained in the popler database — pplr_browse","text":"","code":"if (FALSE) { # No arguments return the standard 16 columns of popler's main table default_vars = pplr_browse()  # full_tbl = TRUE returns the full table all_vars = pplr_browse(full_tbl = TRUE)  # subset only data from the sevilleta LTER, and open the relative report in a html page sev_data = pplr_browse(lterid == \"SEV\", report = TRUE)  # consider only plant data sets  plant_data = pplr_browse(kingdom == \"Plantae\")  # Select only the data you need three_columns = pplr_browse(vars = c(\"title\",\"proj_metadata_key\",\"genus\",\"species\"))  # Select only the data you need study_21 = pplr_browse( proj_metadata_key == 25)  # Select studies that contain word \"parasite\" parasite_studies = pplr_browse( keyword = \"parasite\") }"},{"path":"https://docs.ropensci.org/popler/reference/pplr_citation.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide citations for a popler object returned by pplr_browse or\npplr_get_data object. — pplr_citation","title":"Provide citations for a popler object returned by pplr_browse or\npplr_get_data object. — pplr_citation","text":"Returns bibliography, Bibtex citations, acknowledgment template.","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_citation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide citations for a popler object returned by pplr_browse or\npplr_get_data object. — pplr_citation","text":"","code":"pplr_citation(input, bibtex_path = NULL)"},{"path":"https://docs.ropensci.org/popler/reference/pplr_citation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide citations for a popler object returned by pplr_browse or\npplr_get_data object. — pplr_citation","text":"input object class browse get_data. bibtex_path Specify filename location  generated markdown file (optional).","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_citation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide citations for a popler object returned by pplr_browse or\npplr_get_data object. — pplr_citation","text":"list references input.","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_citation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provide citations for a popler object returned by pplr_browse or\npplr_get_data object. — pplr_citation","text":"","code":"if (FALSE) { # make a browse object metadata <- pplr_browse(proj_metadata_key %in% c(17, 317, 494))  # cite the projects cite <- pplr_citation(metadata)  # cite$bibliography          # the bibliography # cite$Bibtex                # Bibtex entries for each dataset # cite$acknowledgement       # acknowledgement template }"},{"path":"https://docs.ropensci.org/popler/reference/pplr_cov_unpack.html","id":null,"dir":"Reference","previous_headings":"","what":"Unpack the covariates contained in the dataset downloaded via \npplr_get_data() — pplr_cov_unpack","title":"Unpack the covariates contained in the dataset downloaded via \npplr_get_data() — pplr_cov_unpack","text":"Create data frame \"extracting\" covariates column contained dataset downloaded pplr_get_data().","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_cov_unpack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unpack the covariates contained in the dataset downloaded via \npplr_get_data() — pplr_cov_unpack","text":"","code":"pplr_cov_unpack(input)"},{"path":"https://docs.ropensci.org/popler/reference/pplr_cov_unpack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unpack the covariates contained in the dataset downloaded via \npplr_get_data() — pplr_cov_unpack","text":"input object class get_data.","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_cov_unpack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unpack the covariates contained in the dataset downloaded via \npplr_get_data() — pplr_cov_unpack","text":"data frame whose columns represent covariates dataset downloaded via pplr_get_data(). Note covariates  contained covariates column datasets downloaded using pplr_get_data().","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_cov_unpack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unpack the covariates contained in the dataset downloaded via \npplr_get_data() — pplr_cov_unpack","text":"","code":"if (FALSE) { library(dplyr) demo_d <- pplr_get_data(proj_metadata_key == 8) as.tbl( pplr_cov_unpack( demo_d ) ) }"},{"path":"https://docs.ropensci.org/popler/reference/pplr_dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Dictionary of the popler metadata variables — pplr_dictionary","title":"Dictionary of the popler metadata variables — pplr_dictionary","text":"Describes metadata variables contained popler database, shows content.","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_dictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dictionary of the popler metadata variables — pplr_dictionary","text":"","code":"pplr_dictionary(..., full_tbl = FALSE)"},{"path":"https://docs.ropensci.org/popler/reference/pplr_dictionary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dictionary of the popler metadata variables — pplr_dictionary","text":"... sequence (unquoted) variables specifying one variables popler's main table dictionary  information needed full_tbl logical; TRUE, function returns table describing variables full main table. FALSE, function returns table describing standard  variables. Default FALSE.","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_dictionary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dictionary of the popler metadata variables — pplr_dictionary","text":"","code":"if (FALSE) { # Column names column_names <- pplr_dictionary(full_tbl = FALSE)  # Dictionary information dictionary_lter <- pplr_dictionary(lterid, full_tbl = FALSE)  # multiple columns dictionary_lter_lat <- pplr_dictionary(lterid,lat_lter, full_tbl = FALSE) }"},{"path":"https://docs.ropensci.org/popler/reference/pplr_get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download data from the popler database — pplr_get_data","title":"Download data from the popler database — pplr_get_data","text":"function downloads datasets contained popler database.  user can download data directly, using logical expression, indirectly,  using objects created pplr_browse.","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download data from the popler database — pplr_get_data","text":"","code":"pplr_get_data(..., cov_unpack = FALSE)"},{"path":"https://docs.ropensci.org/popler/reference/pplr_get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download data from the popler database — pplr_get_data","text":"... object produced pplr_browse logical expression. cov_unpack logical; TRUE, function pplr_cov_unpack  applied variable covariates downloaded dataset  order extract variables contained therein combine new columns default output. Default FALSE.","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download data from the popler database — pplr_get_data","text":"data fame class get_data, data.frame.","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_get_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download data from the popler database — pplr_get_data","text":". default, following variables included user calls pplr_get_data(). authors authors_contact year day month sppcode genus species datatype spatial_replication_level_1_label spatial_replication_level_1 spatial_replication_level_2_label spatial_replication_level_2 spatial_replication_level_3_label spatial_replication_level_3 spatial_replication_level_4_label spatial_replication_level_4 spatial_replication_level_5_label spatial_replication_level_5 proj_metadata_key structure_type_1 structure_type_2 structure_type_3 structure_type_4 treatment_type_1 treatment_type_2 treatment_type_3 covariates","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_get_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download data from the popler database — pplr_get_data","text":"","code":"if (FALSE) { # browse a study, then get the data associated with it parasite = pplr_browse(proj_metadata_key == 25) gh_data = pplr_get_data(parasite)  # insect data sets from the SEV lter site insect_sev = pplr_browse(class == \"Insecta\" & lterid == \"SEV\") insect_25_yrs96_99 = pplr_get_data(insect_sev)  insect_21_25 = pplr_get_data( (proj_metadata_key == 43 |                                 proj_metadata_key == 25) ) }"},{"path":"https://docs.ropensci.org/popler/reference/pplr_maps.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate maps of LTER sites — pplr_maps","title":"Generate maps of LTER sites — pplr_maps","text":"Generates maps LTER sites given input object. Sizes site markers correspond number studies given site.","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_maps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate maps of LTER sites — pplr_maps","text":"","code":"pplr_maps(input, return_plot = FALSE)"},{"path":"https://docs.ropensci.org/popler/reference/pplr_maps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate maps of LTER sites — pplr_maps","text":"input object created either pplr_browse() pplr_get_data() return_plot logical; TRUE function returns ggplot  object subsequent modification. FALSE, function returns invisible copy input  object (useful piping). Default FALSE.","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_maps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate maps of LTER sites — pplr_maps","text":"input object (invisibly) ggplot2 object.","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_maps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate maps of LTER sites — pplr_maps","text":"","code":"if (FALSE) {  library(dplyr) # make %>% available  browse_object <- pplr_browse(proj_metadata_key == 11)  browse_object %>%   pplr_maps()  }"},{"path":"https://docs.ropensci.org/popler/reference/pplr_metadata_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Get metadata information from a data object — pplr_metadata_url","title":"Get metadata information from a data object — pplr_metadata_url","text":"Load webpage containing metadata data sets  contained objects produced pplr_browse downloaded  pplr_get_data(). downloaded data multiple projects,  function open multiple webpages. wrapper function  browseURL base.","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_metadata_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get metadata information from a data object — pplr_metadata_url","text":"","code":"pplr_metadata_url(input)"},{"path":"https://docs.ropensci.org/popler/reference/pplr_metadata_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get metadata information from a data object — pplr_metadata_url","text":"input object produced function pplr_get_data().","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_metadata_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get metadata information from a data object — pplr_metadata_url","text":"","code":"if (FALSE) { # Load the metadata webpages of the projects that contain data from the Poa genus. fes_d <- pplr_browse(genus == \"Festuca\") pplr_metadata_url( fes_d ) }"},{"path":"https://docs.ropensci.org/popler/reference/pplr_report_dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"A user-friendly dictionary of the popler metadata — pplr_report_dictionary","title":"A user-friendly dictionary of the popler metadata — pplr_report_dictionary","text":"Provides information variables metadata contained popler  database, kind data contained variables.","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_report_dictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A user-friendly dictionary of the popler metadata — pplr_report_dictionary","text":"","code":"pplr_report_dictionary(full_tbl = FALSE, md_file = NULL,   html_file = NULL)"},{"path":"https://docs.ropensci.org/popler/reference/pplr_report_dictionary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A user-friendly dictionary of the popler metadata — pplr_report_dictionary","text":"full_tbl logical; TRUE function returns variables  contained full main table. FALSE, functions returns standard variables. Default FALSE. md_file Specify filename location  generated markdown file (optional) html_file Specify filename location  generated html file (optional)","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_report_dictionary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A user-friendly dictionary of the popler metadata — pplr_report_dictionary","text":"function called side effects  return R object.","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_report_dictionary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A user-friendly dictionary of the popler metadata — pplr_report_dictionary","text":"","code":"if (FALSE) { # Full dictionary pplr_report_dictionary(full_tbl = TRUE)  # \"Abridged\" version pplr_report_dictionary() }"},{"path":"https://docs.ropensci.org/popler/reference/pplr_report_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a report of the metadata of project(s) as an html page — pplr_report_metadata","title":"Open a report of the metadata of project(s) as an html page — pplr_report_metadata","text":"Generates readable report metadata describing data sets  contained popler. report contains citations, links original  URL data set, example code obtain metadata data projects represented html page.","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_report_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a report of the metadata of project(s) as an html page — pplr_report_metadata","text":"","code":"pplr_report_metadata(input, md_file = \"./browse.Rmd\",   html_file = \"./browse.html\")"},{"path":"https://docs.ropensci.org/popler/reference/pplr_report_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a report of the metadata of project(s) as an html page — pplr_report_metadata","text":"input popler object returned pplr_browse()  pplr_get_data() md_file Specify filename location generated markdown file (optional) html_file Specify filename location generated html file (optional)","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_report_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open a report of the metadata of project(s) as an html page — pplr_report_metadata","text":"invisible copy input.","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_report_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open a report of the metadata of project(s) as an html page — pplr_report_metadata","text":"","code":"if (FALSE) { # Full dictionary one_spp <- pplr_browse(community == \"no\" & duration_years > 15) pplr_report_metadata(one_spp)  data <- pplr_get_data(one_spp) pplr_report_metadata(data) # same as above }"},{"path":"https://docs.ropensci.org/popler/reference/pplr_search.html","id":null,"dir":"Reference","previous_headings":"","what":"search — pplr_search","title":"search — pplr_search","text":"search","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"search — pplr_search","text":"","code":"pplr_search(proj_metadata_key, limit = 10, offset = 0, ...)"},{"path":"https://docs.ropensci.org/popler/reference/pplr_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"search — pplr_search","text":"proj_metadata_key project metadata key limit number records return, default: 10 offset record number start , default: first record ... curl options passed [crul::HttpClient]","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"search — pplr_search","text":"","code":"# basic example pplr_search(proj_metadata_key = 13) #> $count #> [1] 24543 #>  #> $returned #> [1] 10 #>  #> $data #> # A tibble: 10 × 30 #>    count_table_key year   month day   spatial_replication_level_1 #>    <lgl>           <chr>  <chr> <chr> <chr>                       #>  1 NA              1992.0 10.0  8.0   BC_I                        #>  2 NA              1998.0 9.0   17.0  BC_I                        #>  3 NA              1998.0 9.0   17.0  BC_I                        #>  4 NA              1993.0 10.0  26.0  BC_I                        #>  5 NA              1989.0 8.0   22.0  BC_I                        #>  6 NA              1992.0 10.0  13.0  BC_I                        #>  7 NA              1990.0 11.0  16.0  BC_I                        #>  8 NA              2002.0 10.0  18.0  BC_I                        #>  9 NA              1982.0 11.0  18.0  BC_I                        #> 10 NA              2005.0 10.0  21.0  BC_I                        #> # ℹ 25 more variables: spatial_replication_level_2 <chr>, #> #   spatial_replication_level_3 <chr>, spatial_replication_level_4 <lgl>, #> #   spatial_replication_level_5 <lgl>, treatment_type_1 <lgl>, #> #   treatment_type_2 <lgl>, treatment_type_3 <lgl>, structure_type_1 <chr>, #> #   structure_type_2 <chr>, structure_type_3 <chr>, count_observation <chr>, #> #   covariates <chr>, structure_type_4 <chr>, authors <chr>, #> #   authors_contact <chr>, sppcode <chr>, genus <chr>, species <chr>, … #>  #> $error #> NULL #>  # pass in curl options for debugging, seeing http request details pplr_search(proj_metadata_key = 13, verbose = TRUE) #> $count #> [1] 24543 #>  #> $returned #> [1] 10 #>  #> $data #> # A tibble: 10 × 30 #>    count_table_key year   month day   spatial_replication_level_1 #>    <lgl>           <chr>  <chr> <chr> <chr>                       #>  1 NA              1992.0 10.0  8.0   BC_I                        #>  2 NA              1998.0 9.0   17.0  BC_I                        #>  3 NA              1998.0 9.0   17.0  BC_I                        #>  4 NA              1993.0 10.0  26.0  BC_I                        #>  5 NA              1989.0 8.0   22.0  BC_I                        #>  6 NA              1992.0 10.0  13.0  BC_I                        #>  7 NA              1990.0 11.0  16.0  BC_I                        #>  8 NA              2002.0 10.0  18.0  BC_I                        #>  9 NA              1982.0 11.0  18.0  BC_I                        #> 10 NA              2005.0 10.0  21.0  BC_I                        #> # ℹ 25 more variables: spatial_replication_level_2 <chr>, #> #   spatial_replication_level_3 <chr>, spatial_replication_level_4 <lgl>, #> #   spatial_replication_level_5 <lgl>, treatment_type_1 <lgl>, #> #   treatment_type_2 <lgl>, treatment_type_3 <lgl>, structure_type_1 <chr>, #> #   structure_type_2 <chr>, structure_type_3 <chr>, count_observation <chr>, #> #   covariates <chr>, structure_type_4 <chr>, authors <chr>, #> #   authors_contact <chr>, sppcode <chr>, genus <chr>, species <chr>, … #>  #> $error #> NULL #>"},{"path":"https://docs.ropensci.org/popler/reference/pplr_site_rep.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial-temporal replication of data sets — pplr_site_rep","title":"Spatial-temporal replication of data sets — pplr_site_rep","text":"Functions examine number temporal replicates  contained within spatial replication level dataset.  pplr_site_rep_plot plots temporal replicates available  site. pplr_site_rep produces logical vectors identify spatial  replicates enough temporal replication, summary tables.","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_site_rep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial-temporal replication of data sets — pplr_site_rep","text":"","code":"pplr_site_rep(input, freq = 1, duration = 10, rep_level = 1,   return_logical = TRUE)  pplr_site_rep_plot(input, return_plot = FALSE)"},{"path":"https://docs.ropensci.org/popler/reference/pplr_site_rep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial-temporal replication of data sets — pplr_site_rep","text":"input object produced pplr_get_data. Note output pplr_browse, raw data required  calculate amount replication. freq number corresponding desired annual frequency  replicates. Studies replicated frequently  included counts replicated less frequently  excluded.  return_logical = TRUE, rows contain information sites  replicated desired frequency TRUE value,  rows FALSE value.  Values greater 1 select sampling done multiple times per year.  example, freq = 2 indicates desired sampling frequency 6 months. Conversely, freq = 0.5 indicates desired sampling done  every 2 years. duration integer corresponding desired number yearly replicates. Rows containing site information sites  replication included, less excluded. rep_level integer corresponding level spatial  replication verify yearly temporal replication. Values 1 5  possible (though higher levels may present datasets).  Higher values correspond higher levels spatial nestedness.  default value rep_level = 1 corresponds sites. return_logical logical; TRUE, function returns logical vector. vector can used subset dataset. FALSE,  function returns summary table class tbl. table shows,  variable number_of_samples, many temporal replicates per year  contained spatial replicate. Default TRUE. return_plot logical indicating whether return copy  input data ggplot object created function. Use TRUE return ggplot object subsequent modification. Use FALSE return invisible copy input object  (useful piping). Default FALSE.","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_site_rep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial-temporal replication of data sets — pplr_site_rep","text":"pplr_site_rep_plot: input object (invisibly) ggplot2 object. Use return_plot control. pplr_site_rep: tbl logical vector length  dim(input)[1]. Use return_logical control.","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_site_rep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spatial-temporal replication of data sets — pplr_site_rep","text":"pplr_site_rep_plot produces scatterplot showing sites  (spatial_replication_level_1) years data available. pplr_site_rep works level spatial replication produces either summary table temporal replication logical vector can used  subset data set based desired frequency length time.","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_site_rep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial-temporal replication of data sets — pplr_site_rep","text":"","code":"if (FALSE) {  library(ggplot2) library(dplyr)  # produce logical vector and subset using it. This can also be piped into a  # the plotting function for visiualization  good_studies <- pplr_get_data(lterid == 'SEV') %>%                    .[pplr_site_rep(input = .,                                    duration = 12,                                     rep_level = 3), ] %>%                    pplr_site_rep_plot()                                          # Or, make a neat summary table and decide where to go from there SEV <- pplr_get_data(lterid == 'SEV')  rep_table <- pplr_site_rep(input = SEV,                            freq = 0.5,                            duration = 12,                            return_logical = FALSE)   # pplr_site_rep_plot ---------------                                                       # create an unmodified figure BNZ <- pplr_get_data(lterid == 'BNZ')  pplr_site_rep_plot(BNZ)  # Return the figure instead of the data for subsequent modification Antarctica <- pplr_get_data(lterid == 'PAL')  pplr_site_rep_plot(Antarctica,               return_plot = TRUE) +     ggtitle(\"Penguins Rock!\")     # Use within pipes. Cannot return and modify the figure this way. pplr_get_data(lterid == 'SEV') %>%    pplr_site_rep_plot(return_plot = FALSE) %>%   pplr_report_metadata() }"},{"path":"https://docs.ropensci.org/popler/reference/pplr_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"search — pplr_summary","title":"search — pplr_summary","text":"search","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"search — pplr_summary","text":"","code":"pplr_summary(limit = 10, offset = 0, ...)"},{"path":"https://docs.ropensci.org/popler/reference/pplr_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"search — pplr_summary","text":"limit number records return, default: 10 offset record number start , default: first record ... curl options passed [crul::HttpClient]","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"search — pplr_summary","text":"","code":"# basic example pplr_summary() #> $count #> [1] 86810 #>  #> $returned #> [1] 10 #>  #> $data #> # A tibble: 10 × 81 #>    proj_metadata_key lter_project_fkey title              samplingunits datatype #>                <int> <chr>             <chr>              <chr>         <chr>    #>  1               231 CDR               e097: Nitrogen Ad… g/m2          biomass  #>  2               231 CDR               e097: Nitrogen Ad… g/m2          biomass  #>  3               231 CDR               e097: Nitrogen Ad… g/m2          biomass  #>  4               231 CDR               e097: Nitrogen Ad… g/m2          biomass  #>  5               231 CDR               e097: Nitrogen Ad… g/m2          biomass  #>  6               231 CDR               e097: Nitrogen Ad… g/m2          biomass  #>  7               231 CDR               e097: Nitrogen Ad… g/m2          biomass  #>  8               231 CDR               e097: Nitrogen Ad… g/m2          biomass  #>  9               231 CDR               e097: Nitrogen Ad… g/m2          biomass  #> 10               231 CDR               e097: Nitrogen Ad… g/m2          biomass  #> # ℹ 76 more variables: structured_type_1 <lgl>, structured_type_1_units <lgl>, #> #   structured_type_2 <lgl>, structured_type_2_units <lgl>, #> #   structured_type_3 <lgl>, structured_type_3_units <lgl>, studystartyr <chr>, #> #   studyendyr <chr>, samplefreq <chr>, studytype <chr>, community <chr>, #> #   spatial_replication_level_1_extent <chr>, #> #   spatial_replication_level_1_extent_units <lgl>, #> #   spatial_replication_level_1_label <chr>, … #>  #> $error #> NULL #>  # pass in curl options for debugging, seeing http request details pplr_summary(verbose = TRUE) #> $count #> [1] 86810 #>  #> $returned #> [1] 10 #>  #> $data #> # A tibble: 10 × 81 #>    proj_metadata_key lter_project_fkey title              samplingunits datatype #>                <int> <chr>             <chr>              <chr>         <chr>    #>  1               231 CDR               e097: Nitrogen Ad… g/m2          biomass  #>  2               231 CDR               e097: Nitrogen Ad… g/m2          biomass  #>  3               231 CDR               e097: Nitrogen Ad… g/m2          biomass  #>  4               231 CDR               e097: Nitrogen Ad… g/m2          biomass  #>  5               231 CDR               e097: Nitrogen Ad… g/m2          biomass  #>  6               231 CDR               e097: Nitrogen Ad… g/m2          biomass  #>  7               231 CDR               e097: Nitrogen Ad… g/m2          biomass  #>  8               231 CDR               e097: Nitrogen Ad… g/m2          biomass  #>  9               231 CDR               e097: Nitrogen Ad… g/m2          biomass  #> 10               231 CDR               e097: Nitrogen Ad… g/m2          biomass  #> # ℹ 76 more variables: structured_type_1 <lgl>, structured_type_1_units <lgl>, #> #   structured_type_2 <lgl>, structured_type_2_units <lgl>, #> #   structured_type_3 <lgl>, structured_type_3_units <lgl>, studystartyr <chr>, #> #   studyendyr <chr>, samplefreq <chr>, studytype <chr>, community <chr>, #> #   spatial_replication_level_1_extent <chr>, #> #   spatial_replication_level_1_extent_units <lgl>, #> #   spatial_replication_level_1_label <chr>, … #>  #> $error #> NULL #>"},{"path":"https://docs.ropensci.org/popler/reference/pplr_summary_table_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Update popler's summary table — pplr_summary_table_update","title":"Update popler's summary table — pplr_summary_table_update","text":"Automatically retrieve date version popler summary table","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_summary_table_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update popler's summary table — pplr_summary_table_update","text":"","code":"pplr_summary_table_update()"},{"path":"https://docs.ropensci.org/popler/reference/pplr_summary_table_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update popler's summary table — pplr_summary_table_update","text":"function called side effect return  anything","code":""},{"path":"https://docs.ropensci.org/popler/reference/pplr_summary_table_update.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Update popler's summary table — pplr_summary_table_update","text":"summary_table often called internally popler functions,  can also accessed directly calling pplr_summary_table_import().","code":""},{"path":"https://docs.ropensci.org/popler/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr filter, mutate","code":""},{"path":[]},{"path":"https://docs.ropensci.org/popler/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"Popler 0.2.0 (2019-07-23)","text":"new version Popler queries online database via API","code":""},{"path":"https://docs.ropensci.org/popler/news/index.html","id":"minor-improvements-0-2-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"Popler 0.2.0 (2019-07-23)","text":"Faster tests use stubs","code":""},{"path":"https://docs.ropensci.org/popler/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Popler 0.2.0 (2019-07-23)","text":"Fix bugs contained report_metadata","code":""},{"path":"https://docs.ropensci.org/popler/news/index.html","id":"deprecated-and-defunct-0-2-0","dir":"Changelog","previous_headings":"","what":"DEPRECATED AND DEFUNCT","title":"Popler 0.2.0 (2019-07-23)","text":"hello_world() now deprecated removed future version, use hello_mars()","code":""},{"path":"https://docs.ropensci.org/popler/news/index.html","id":"documentation-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"DOCUMENTATION FIXES","title":"Popler 0.2.0 (2019-07-23)","text":"Created new vignette, popler-database-structure, provide full documentation database structure Updated README file include information database structure Removed typos clarified functions documentation","code":""},{"path":"https://docs.ropensci.org/popler/news/index.html","id":"popler-010","dir":"Changelog","previous_headings":"","what":"Popler 0.1.0","title":"Popler 0.1.0","text":"Introduces first stable release popler R package querying PostgreSQL data base name.","code":""}]
